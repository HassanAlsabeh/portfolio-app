{"ast":null,"code":"var _jsxFileName = \"/home/hassan/Desktop/Frontend/src/pages/experience/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport ReactDOM from \"react-dom\";\nimport \"./modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Background = styled.div`\nwidth: 100%;\nheight: 100%;\nbackground: rgba(0, 0, 0, 0.3);\nposition: fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntop:0;\nright: 0;\n`;\n_c = Background;\nconst ModalWrapper = styled.div`\n  width: 900px;\n  height: 400px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n_c2 = ModalWrapper;\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n_c3 = ModalImg;\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n_c4 = ModalContent;\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n_c5 = CloseModalButton;\nexport const Modal = ({\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n      console.log('I pressed');\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gkoscd\",\n      children: /*#__PURE__*/_jsxDEV(Background, {\n        onClick: closeModal,\n        ref: modalRef,\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          style: animation,\n          children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n            showModal: showModal,\n            children: [/*#__PURE__*/_jsxDEV(ModalImg, {\n              src: \"https://www.icoldo.com/wordpress/wp-content/uploads/2018/02/js_node_js_react_logos-300x225.png\",\n              alt: \"camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Are you ready?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Description about experience \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n              \"aria-label\": \"Close modal\",\n              onClick: () => setShowModal(prev => !prev)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false), document.getElementById(\"popup\"));\n};\n\n_s(Modal, \"v+8xQfdHkWl7ocSyEt0s8KDGwZY=\", false, function () {\n  return [useSpring];\n});\n\n_c6 = Modal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"ModalWrapper\");\n$RefreshReg$(_c3, \"ModalImg\");\n$RefreshReg$(_c4, \"ModalContent\");\n$RefreshReg$(_c5, \"CloseModalButton\");\n$RefreshReg$(_c6, \"Modal\");","map":{"version":3,"sources":["/home/hassan/Desktop/Frontend/src/pages/experience/Modal.js"],"names":["React","useRef","useEffect","useCallback","useSpring","animated","styled","MdClose","ReactDOM","Background","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","Modal","showModal","setShowModal","modalRef","animation","config","duration","opacity","transform","closeModal","e","current","target","keyPress","key","console","log","document","addEventListener","removeEventListener","createPortal","prev","getElementById"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport ReactDOM from \"react-dom\"\nimport \"./modal.css\";\nconst Background = styled.div`\nwidth: 100%;\nheight: 100%;\nbackground: rgba(0, 0, 0, 0.3);\nposition: fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntop:0;\nright: 0;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 900px;\n  height: 400px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\nexport const Modal = ({ showModal, setShowModal }) => {\n    const modalRef = useRef();\n  \n    const animation = useSpring({\n      config: {\n        duration: 250\n      },\n      opacity: showModal ? 1 : 0,\n      transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    });\n  \n    const closeModal = e => {\n      if (modalRef.current === e.target) {\n        setShowModal(false);\n      }\n    };\n  \n    const keyPress = useCallback(\n      e => {\n        if (e.key === 'Escape' && showModal) {\n          setShowModal(false);\n          console.log('I pressed');\n        }\n      },\n      [setShowModal, showModal]\n    );\n  \n    useEffect(\n      () => {\n        document.addEventListener('keydown', keyPress);\n        return () => document.removeEventListener('keydown', keyPress);\n      },\n      [keyPress]\n    );\n  \n    return  ReactDOM.createPortal(\n      <>\n    \n        {showModal ? (\n          <div className=\"gkoscd\">\n          <Background onClick={closeModal} ref={modalRef}>\n            <animated.div style={animation}>\n              <ModalWrapper showModal={showModal}>\n               {/*} <ModalImg src={require('./react-node.png')} alt='camera' />*/}\n               <ModalImg src='https://www.icoldo.com/wordpress/wp-content/uploads/2018/02/js_node_js_react_logos-300x225.png' alt='camera' />\n                <ModalContent>\n                  <h1>Are you ready?</h1>\n                  <p>Description about experience </p>\n                 {/* <button>Join Now</button>//*/}\n                </ModalContent>\n                <CloseModalButton\n                  aria-label='Close modal'\n                  onClick={() => setShowModal(prev => !prev)}\n                />\n              </ModalWrapper>\n            </animated.div>\n          </Background>\n          </div>\n        ) : null}\n        \n      </>,\n        document.getElementById(\"popup\")\n    );\n  };"]},"metadata":{},"sourceType":"module"}